<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1211.1636                               -->
<workbook original-version='18.1' source-build='2019.4.1 (20194.19.1211.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top N Customers' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
      </column>
      <column caption='Top N Products' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
      </column>
    </datasource>
    <datasource caption='transactions+ (sales)' inline='true' name='federated.0xmvaxt0gufnkd17m1kxq1arg7vd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='customers' name='textscan.0hv7xyb1gsej5g1c3cai20mx4q04'>
            <connection class='textscan' directory='C:/Users/91798/OneDrive/Documents/excel files techstack/tableau/tabluea_project/salesdata' filename='customers.csv' password='' server='' />
          </named-connection>
          <named-connection caption='date' name='textscan.18my05a1otrib017eaa1k1rph52d'>
            <connection class='textscan' directory='C:/Users/91798/OneDrive/Documents/excel files techstack/tableau/tabluea_project/salesdata' filename='date.csv' password='' server='' />
          </named-connection>
          <named-connection caption='markets' name='textscan.0ewctew1184zc41837lse0spsdiz'>
            <connection class='textscan' directory='C:/Users/91798/OneDrive/Documents/excel files techstack/tableau/tabluea_project/salesdata' filename='markets.csv' password='' server='' />
          </named-connection>
          <named-connection caption='products' name='textscan.1587lfu0pe4w4h1eic2z413y5ybj'>
            <connection class='textscan' directory='C:/Users/91798/OneDrive/Documents/excel files techstack/tableau/tabluea_project/salesdata' filename='products.csv' password='' server='' />
          </named-connection>
          <named-connection caption='transactions' name='textscan.11wj20q12luj8e1gqdn3a08r2wvi'>
            <connection class='textscan' directory='C:/Users/91798/OneDrive/Documents/excel files techstack/tableau/tabluea_project/salesdata' filename='transactions.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[transactions.csv].[product_code]' />
              <expression op='[products.csv].[product_code]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[transactions.csv].[market_code]' />
                <expression op='[markets.csv].[markets_code]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[transactions.csv].[order_date]' />
                  <expression op='[date.csv].[date]' />
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[transactions.csv].[customer_code]' />
                    <expression op='[customers.csv].[customer_code]' />
                  </expression>
                </clause>
                <relation connection='textscan.11wj20q12luj8e1gqdn3a08r2wvi' name='transactions.csv' table='[transactions#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                    <column datatype='string' name='product_code' ordinal='0' />
                    <column datatype='string' name='customer_code' ordinal='1' />
                    <column datatype='string' name='market_code' ordinal='2' />
                    <column datatype='date' name='order_date' ordinal='3' />
                    <column datatype='integer' name='sales_qty' ordinal='4' />
                    <column datatype='integer' name='sales_amount' ordinal='5' />
                    <column datatype='string' name='currency' ordinal='6' />
                  </columns>
                </relation>
                <relation connection='textscan.11wj20q12luj8e1gqdn3a08r2wvi' name='customers.csv' table='[customers#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                    <column datatype='string' name='customer_code' ordinal='0' />
                    <column datatype='string' name='custmer_name' ordinal='1' />
                    <column datatype='string' name='customer_type' ordinal='2' />
                  </columns>
                </relation>
              </relation>
              <relation connection='textscan.11wj20q12luj8e1gqdn3a08r2wvi' name='date.csv' table='[date#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='date' name='cy_date' ordinal='1' />
                  <column datatype='integer' name='year' ordinal='2' />
                  <column datatype='string' name='month_name' ordinal='3' />
                  <column datatype='string' name='date_yy_mmm' ordinal='4' />
                </columns>
              </relation>
            </relation>
            <relation connection='textscan.11wj20q12luj8e1gqdn3a08r2wvi' name='markets.csv' table='[markets#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                <column datatype='string' name='markets_code' ordinal='0' />
                <column datatype='string' name='markets_name' ordinal='1' />
                <column datatype='string' name='zone' ordinal='2' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.11wj20q12luj8e1gqdn3a08r2wvi' name='products.csv' table='[products#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='string' name='product_code' ordinal='0' />
              <column datatype='string' name='product_type' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[currency]' value='[transactions.csv].[currency]' />
          <map key='[custmer_name]' value='[customers.csv].[custmer_name]' />
          <map key='[customer_code (customers.csv)]' value='[customers.csv].[customer_code]' />
          <map key='[customer_code]' value='[transactions.csv].[customer_code]' />
          <map key='[customer_type]' value='[customers.csv].[customer_type]' />
          <map key='[cy_date]' value='[date.csv].[cy_date]' />
          <map key='[date]' value='[date.csv].[date]' />
          <map key='[date_yy_mmm]' value='[date.csv].[date_yy_mmm]' />
          <map key='[market_code]' value='[transactions.csv].[market_code]' />
          <map key='[markets_code]' value='[markets.csv].[markets_code]' />
          <map key='[markets_name]' value='[markets.csv].[markets_name]' />
          <map key='[month_name]' value='[date.csv].[month_name]' />
          <map key='[order_date]' value='[transactions.csv].[order_date]' />
          <map key='[product_code (products.csv)]' value='[products.csv].[product_code]' />
          <map key='[product_code]' value='[transactions.csv].[product_code]' />
          <map key='[product_type]' value='[products.csv].[product_type]' />
          <map key='[sales_amount]' value='[transactions.csv].[sales_amount]' />
          <map key='[sales_qty]' value='[transactions.csv].[sales_qty]' />
          <map key='[year]' value='[date.csv].[year]' />
          <map key='[zone]' value='[markets.csv].[zone]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[transactions.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product_code]</local-name>
            <parent-name>[transactions.csv]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_code]</local-name>
            <parent-name>[transactions.csv]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[market_code]</local-name>
            <parent-name>[transactions.csv]</parent-name>
            <remote-alias>market_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[order_date]</local-name>
            <parent-name>[transactions.csv]</parent-name>
            <remote-alias>order_date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_qty</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sales_qty]</local-name>
            <parent-name>[transactions.csv]</parent-name>
            <remote-alias>sales_qty</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_amount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sales_amount]</local-name>
            <parent-name>[transactions.csv]</parent-name>
            <remote-alias>sales_amount</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>currency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[currency]</local-name>
            <parent-name>[transactions.csv]</parent-name>
            <remote-alias>currency</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[customers.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_code (customers.csv)]</local-name>
            <parent-name>[customers.csv]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>custmer_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[custmer_name]</local-name>
            <parent-name>[customers.csv]</parent-name>
            <remote-alias>custmer_name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_type]</local-name>
            <parent-name>[customers.csv]</parent-name>
            <remote-alias>customer_type</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[date.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[date.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>10</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cy_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[cy_date]</local-name>
            <parent-name>[date.csv]</parent-name>
            <remote-alias>cy_date</remote-alias>
            <ordinal>11</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[date.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month_name]</local-name>
            <parent-name>[date.csv]</parent-name>
            <remote-alias>month_name</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_yy_mmm</remote-name>
            <remote-type>129</remote-type>
            <local-name>[date_yy_mmm]</local-name>
            <parent-name>[date.csv]</parent-name>
            <remote-alias>date_yy_mmm</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[markets.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[markets_code]</local-name>
            <parent-name>[markets.csv]</parent-name>
            <remote-alias>markets_code</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[markets_name]</local-name>
            <parent-name>[markets.csv]</parent-name>
            <remote-alias>markets_name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zone</remote-name>
            <remote-type>129</remote-type>
            <local-name>[zone]</local-name>
            <parent-name>[markets.csv]</parent-name>
            <remote-alias>zone</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[products.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product_code (products.csv)]</local-name>
            <parent-name>[products.csv]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product_type]</local-name>
            <parent-name>[products.csv]</parent-name>
            <remote-alias>product_type</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Normalized amount' datatype='real' name='[Calculation_82472208005681152]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [currency]==&quot;USD&quot; THEN &#13;&#10;    [sales_amount]*74.71 &#13;&#10;ELSE &#13;&#10;    [sales_amount] &#13;&#10;END' />
      </column>
      <column aggregation='CountD' caption='blank' datatype='string' name='[Calculation_82472208028213250]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot; &quot;' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[markets_name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_82472208028213250]' derivation='None' name='[none:Calculation_82472208028213250:nk]' pivot='key' type='nominal' />
      <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (blank,MONTH(cy_date))' hidden='true' name='[Action (blank,MONTH(cy_date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_82472208028213250]' />
          <groupfilter function='level-members' level='[mn:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (blank,YEAR(cy_date))' hidden='true' name='[Action (blank,YEAR(cy_date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_82472208028213250]' />
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (markets_name)' hidden='true' name='[Action (markets_name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[markets_name]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.747813' measure-ordering='alphabetic' measure-percentage='0.180758' parameter-percentage='0.0714286' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_82472208028213250:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot; &quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='customer_code (customers)' />
        <field-sort-custom-order field='custmer_name' />
        <field-sort-custom-order field='customer_type' />
        <field-sort-custom-order field='date' />
        <field-sort-custom-order field='cy_date' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='month_name' />
        <field-sort-custom-order field='date_yy_mmm' />
        <field-sort-custom-order field='markets_code' />
        <field-sort-custom-order field='markets_name' />
        <field-sort-custom-order field='zone' />
        <field-sort-custom-order field='product_code (products)' />
        <field-sort-custom-order field='product_type' />
        <field-sort-custom-order field='product_code' />
        <field-sort-custom-order field='customer_code' />
        <field-sort-custom-order field='market_code' />
        <field-sort-custom-order field='order_date' />
        <field-sort-custom-order field='sales_qty' />
        <field-sort-custom-order field='sales_amount' />
        <field-sort-custom-order field='Calculation_82472208005681152' />
        <field-sort-custom-order field='currency' />
      </field-sort-info>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='top 5 customers' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='top 5 product' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='all year revenue by month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='quantity' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='revenue' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='revenue by markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Filter 9 (generated)' name='[Action9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='sales quantity by market' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='all year revenue by month'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0xmvaxt0gufnkd17m1kxq1arg7vd' />
          </datasources>
          <datasource-dependencies datasource='federated.0xmvaxt0gufnkd17m1kxq1arg7vd'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_82472208005681152]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency]==&quot;USD&quot; THEN &#13;&#10;    [sales_amount]*74.71 &#13;&#10;ELSE &#13;&#10;    [sales_amount] &#13;&#10;END' />
            </column>
            <column aggregation='CountD' caption='blank' datatype='string' name='[Calculation_82472208028213250]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column datatype='integer' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_82472208005681152]' derivation='Sum' name='[sum:Calculation_82472208005681152:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,MONTH(cy_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_82472208028213250]' member='&quot; &quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[mn:cy_date:ok]' member='4' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='5' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,YEAR(cy_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_82472208028213250]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (markets_name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,YEAR(cy_date))]</column>
            <column>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,MONTH(cy_date))]</column>
            <column>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (markets_name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:Calculation_82472208005681152:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' value='#9d7660' />
            <format attr='color' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:Calculation_82472208005681152:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:Calculation_82472208005681152:qk]' value='bold' />
            <format attr='text-format' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:Calculation_82472208005681152:qk]' value='c&quot;₹ &quot;#,##0,,.00M;&quot;₹ &quot;-#,##0,,.00M' />
            <format attr='text-align' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:Calculation_82472208005681152:qk]' value='left' />
            <format attr='vertical-align' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:Calculation_82472208005681152:qk]' value='auto' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[yr:cy_date:ok]' value='#9d7660' />
            <format attr='font-size' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[yr:cy_date:ok]' value='10' />
            <format attr='font-weight' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[yr:cy_date:ok]' value='bold' />
            <format attr='color' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[mn:cy_date:ok]' value='#9d7660' />
            <format attr='font-size' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[mn:cy_date:ok]' value='10' />
            <format attr='text-format' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[mn:cy_date:ok]' value='iLLL' />
            <format attr='font-weight' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[mn:cy_date:ok]' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:Calculation_82472208005681152:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:Calculation_82472208005681152:qk]' />
              <text column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:Calculation_82472208005681152:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:Calculation_82472208005681152:qk]</rows>
        <cols>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[mn:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{286CC9C5-987F-4303-922F-4653C4A82F72}' />
    </worksheet>
    <worksheet name='month'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0xmvaxt0gufnkd17m1kxq1arg7vd' />
          </datasources>
          <datasource-dependencies datasource='federated.0xmvaxt0gufnkd17m1kxq1arg7vd'>
            <column aggregation='CountD' caption='blank' datatype='string' name='[Calculation_82472208028213250]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_82472208028213250]' derivation='None' name='[none:Calculation_82472208028213250:nk]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,YEAR(cy_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_82472208028213250]' member='&quot; &quot;' />
              <groupfilter function='member' level='[yr:cy_date:ok]' member='2018' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (markets_name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,YEAR(cy_date))]</column>
            <column>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (markets_name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='5' />
            <format attr='color' value='#9d7660' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[yr:cy_date:ok]' value='#9d7660' />
            <format attr='font-size' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[yr:cy_date:ok]' value='10' />
            <format attr='font-weight' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[yr:cy_date:ok]' value='bold' />
            <format attr='font-size' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[mn:cy_date:ok]' value='12' />
            <format attr='font-weight' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[mn:cy_date:ok]' value='bold' />
            <format attr='color' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[mn:cy_date:ok]' value='#9d7660' />
            <format attr='text-format' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[mn:cy_date:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[none:Calculation_82472208028213250:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[mn:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{FC6457BA-853D-4D0C-AC01-28F4E39BDEF2}' />
    </worksheet>
    <worksheet name='quantity'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0xmvaxt0gufnkd17m1kxq1arg7vd' />
          </datasources>
          <datasource-dependencies datasource='federated.0xmvaxt0gufnkd17m1kxq1arg7vd'>
            <column aggregation='CountD' caption='blank' datatype='string' name='[Calculation_82472208028213250]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,MONTH(cy_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_82472208028213250]' member='&quot; &quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[mn:cy_date:ok]' member='4' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='5' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,YEAR(cy_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_82472208028213250]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (markets_name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,YEAR(cy_date))]</column>
            <column>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,MONTH(cy_date))]</column>
            <column>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (markets_name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:sales_qty:qk]' value='c&quot;₹ &quot;#,##0,.00K;&quot;₹ &quot;-#,##0,.00K' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:sales_qty:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7' fontsize='18'>Sales Quantity</run>
                <run>Æ&#10;</run>
                <run fontcolor='#4e79a7' fontsize='18'>&lt;[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:sales_qty:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B05B1480-4696-4564-9DA7-1B517AE46B60}' />
    </worksheet>
    <worksheet name='revenue'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0xmvaxt0gufnkd17m1kxq1arg7vd' />
          </datasources>
          <datasource-dependencies datasource='federated.0xmvaxt0gufnkd17m1kxq1arg7vd'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_82472208005681152]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency]==&quot;USD&quot; THEN &#13;&#10;    [sales_amount]*74.71 &#13;&#10;ELSE &#13;&#10;    [sales_amount] &#13;&#10;END' />
            </column>
            <column aggregation='CountD' caption='blank' datatype='string' name='[Calculation_82472208028213250]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column datatype='integer' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_82472208005681152]' derivation='Sum' name='[sum:Calculation_82472208005681152:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,MONTH(cy_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_82472208028213250]' member='&quot; &quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[mn:cy_date:ok]' member='4' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='5' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,YEAR(cy_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_82472208028213250]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (markets_name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,YEAR(cy_date))]</column>
            <column>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,MONTH(cy_date))]</column>
            <column>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (markets_name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:Calculation_82472208005681152:qk]' value='c&quot;₹ &quot;#,##0,,.00M;&quot;₹ &quot;-#,##0,,.00M' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:Calculation_82472208005681152:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7' fontsize='18'>Total Revenue</run>
                <run>Æ&#10;</run>
                <run fontcolor='#4e79a7' fontsize='18'>&lt;[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:Calculation_82472208005681152:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7870B58E-7992-419F-94EC-047A1488B8D8}' />
    </worksheet>
    <worksheet name='revenue by markets'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0xmvaxt0gufnkd17m1kxq1arg7vd' />
          </datasources>
          <datasource-dependencies datasource='federated.0xmvaxt0gufnkd17m1kxq1arg7vd'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_82472208005681152]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency]==&quot;USD&quot; THEN &#13;&#10;    [sales_amount]*74.71 &#13;&#10;ELSE &#13;&#10;    [sales_amount] &#13;&#10;END' />
            </column>
            <column aggregation='CountD' caption='blank' datatype='string' name='[Calculation_82472208028213250]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_82472208005681152]' derivation='Sum' name='[sum:Calculation_82472208005681152:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,MONTH(cy_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_82472208028213250]' member='&quot; &quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[mn:cy_date:ok]' member='4' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='5' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,YEAR(cy_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_82472208028213250]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (markets_name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,YEAR(cy_date))]</column>
            <column>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,MONTH(cy_date))]</column>
            <column>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (markets_name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='138' />
            <format attr='cell-h' value='46' />
            <format attr='cell' value='46' />
            <format attr='cell-q' value='230' />
            <format attr='text-format' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:Calculation_82472208005681152:qk]' value='c&quot;₹ &quot;#,##0,,.00M;&quot;₹ &quot;-#,##0,,.00M' />
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[none:markets_name:nk]' value='124' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='color' value='#333333' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:Calculation_82472208005681152:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#f17b79' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[none:markets_name:nk]</rows>
        <cols>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:Calculation_82472208005681152:qk]</cols>
      </table>
      <simple-id uuid='{87F8C15F-5B33-4370-A9EF-0DC6497E0643}' />
    </worksheet>
    <worksheet name='sales quantity by market'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0xmvaxt0gufnkd17m1kxq1arg7vd' />
          </datasources>
          <datasource-dependencies datasource='federated.0xmvaxt0gufnkd17m1kxq1arg7vd'>
            <column aggregation='CountD' caption='blank' datatype='string' name='[Calculation_82472208028213250]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,MONTH(cy_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_82472208028213250]' member='&quot; &quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[mn:cy_date:ok]' member='4' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='5' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,YEAR(cy_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_82472208028213250]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (markets_name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,YEAR(cy_date))]</column>
            <column>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,MONTH(cy_date))]</column>
            <column>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (markets_name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='114' />
            <format attr='cell-h' value='38' />
            <format attr='cell' value='38' />
            <format attr='cell-q' value='190' />
            <format attr='text-format' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:sales_qty:qk]' value='c&quot;₹ &quot;#,##0,.00K;&quot;₹ &quot;-#,##0,.00K' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[none:markets_name:nk]' value='132' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:sales_qty:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f17b79' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[none:markets_name:nk]</rows>
        <cols>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:sales_qty:qk]</cols>
      </table>
      <simple-id uuid='{CC12FB83-D001-44FF-9515-8DF39F43501F}' />
    </worksheet>
    <worksheet name='top 5 customers'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 5 Customers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0xmvaxt0gufnkd17m1kxq1arg7vd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N Customers' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0xmvaxt0gufnkd17m1kxq1arg7vd'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_82472208005681152]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency]==&quot;USD&quot; THEN &#13;&#10;    [sales_amount]*74.71 &#13;&#10;ELSE &#13;&#10;    [sales_amount] &#13;&#10;END' />
            </column>
            <column aggregation='CountD' caption='blank' datatype='string' name='[Calculation_82472208028213250]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_82472208005681152]' derivation='Sum' name='[sum:Calculation_82472208005681152:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,MONTH(cy_date))]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_82472208028213250]' member='&quot; &quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[mn:cy_date:ok]' member='4' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='5' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,YEAR(cy_date))]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_82472208028213250]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (markets_name)]' context='true'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[none:custmer_name:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_82472208005681152])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:custmer_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,MONTH(cy_date))]</column>
            <column>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,YEAR(cy_date))]</column>
            <column>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (markets_name)]</column>
            <column>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[none:custmer_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='114' />
            <format attr='cell-h' value='38' />
            <format attr='cell' value='38' />
            <format attr='cell-q' value='190' />
            <format attr='text-format' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:Calculation_82472208005681152:qk]' value='c&quot;₹ &quot;#,##0,,.00M;&quot;₹ &quot;-#,##0,,.00M' />
            <format attr='text-align' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:Calculation_82472208005681152:qk]' value='center' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:Calculation_82472208005681152:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f17b79' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[none:custmer_name:nk]</rows>
        <cols>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:Calculation_82472208005681152:qk]</cols>
      </table>
      <simple-id uuid='{5FC339BA-F9BF-49D2-B7FD-20328C19D1DC}' />
    </worksheet>
    <worksheet name='top 5 product'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 5 Products</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0xmvaxt0gufnkd17m1kxq1arg7vd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N Products' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0xmvaxt0gufnkd17m1kxq1arg7vd'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_82472208005681152]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency]==&quot;USD&quot; THEN &#13;&#10;    [sales_amount]*74.71 &#13;&#10;ELSE &#13;&#10;    [sales_amount] &#13;&#10;END' />
            </column>
            <column aggregation='CountD' caption='blank' datatype='string' name='[Calculation_82472208028213250]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_code (products)]' derivation='None' name='[none:product_code (products):nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_82472208005681152]' derivation='Sum' name='[sum:Calculation_82472208005681152:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,MONTH(cy_date))]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_82472208028213250]' member='&quot; &quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[mn:cy_date:ok]' member='4' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='5' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,YEAR(cy_date))]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_82472208028213250]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (markets_name)]' context='true'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[none:product_code (products):nk]'>
            <groupfilter count='[Parameters].[Parameter 2]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_82472208005681152])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:product_code (products):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,MONTH(cy_date))]</column>
            <column>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,YEAR(cy_date))]</column>
            <column>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (markets_name)]</column>
            <column>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[none:product_code (products):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:Calculation_82472208005681152:qk]' value='c&quot;₹ &quot;#,##0,,.00M;&quot;₹ &quot;-#,##0,,.00M' />
            <format attr='cell-w' value='114' />
            <format attr='cell-h' value='38' />
            <format attr='cell' value='38' />
            <format attr='cell-q' value='190' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:Calculation_82472208005681152:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f17b79' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[none:product_code (products):nk]</rows>
        <cols>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:Calculation_82472208005681152:qk]</cols>
      </table>
      <simple-id uuid='{7BDB8200-30AA-4E63-A159-E819DDB488DC}' />
    </worksheet>
    <worksheet name='year'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0xmvaxt0gufnkd17m1kxq1arg7vd' />
          </datasources>
          <datasource-dependencies datasource='federated.0xmvaxt0gufnkd17m1kxq1arg7vd'>
            <column aggregation='CountD' caption='blank' datatype='string' name='[Calculation_82472208028213250]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_82472208028213250]' derivation='None' name='[none:Calculation_82472208028213250:nk]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,MONTH(cy_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_82472208028213250]' member='&quot; &quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[mn:cy_date:ok]' member='4' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='5' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (markets_name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (blank,MONTH(cy_date))]</column>
            <column>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[Action (markets_name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#9d7660' />
            <format attr='height' value='5' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[yr:cy_date:ok]' value='#9d7660' />
            <format attr='font-size' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[yr:cy_date:ok]' value='10' />
            <format attr='font-weight' field='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[yr:cy_date:ok]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[none:Calculation_82472208028213250:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[yr:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{396DEFC9-2494-493E-B6BD-C54830FB4F67}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='17' sizing-mode='fixed' />
      <zones>
        <zone h='5889' id='3' name='year' w='16000' x='39313' y='1111' />
        <zone h='7889' id='4' name='month' w='48938' x='24750' y='7444' />
        <zone h='12333' id='5' name='revenue' w='14313' x='4750' y='12889' />
        <zone h='12111' id='6' name='quantity' w='14000' x='28500' y='13111' />
        <zone h='68667' id='7' name='revenue by markets' w='22500' x='125' y='24556' />
        <zone h='68667' id='8' name='sales quantity by market' w='22125' x='22938' y='24444' />
        <zone h='34111' id='9' name='all year revenue by month' w='54688' x='45000' y='17333' />
        <zone h='36222' id='10' name='top 5 customers' w='25188' x='45750' y='55444' />
        <zone h='36000' id='11' name='top 5 product' w='28875' x='71313' y='55556' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='27' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='26' param='vert' type='layout-flow' w='99000' x='500' y='889'>
                <zone fixed-size='53' h='5889' id='3' is-fixed='true' name='year' w='16000' x='39313' y='1111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='71' h='7889' id='4' is-fixed='true' name='month' w='48938' x='24750' y='7444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='111' h='12333' id='5' is-fixed='true' name='revenue' w='14313' x='4750' y='12889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='109' h='12111' id='6' is-fixed='true' name='quantity' w='14000' x='28500' y='13111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='34111' id='9' is-fixed='true' name='all year revenue by month' w='54688' x='45000' y='17333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='68667' id='8' is-fixed='true' name='sales quantity by market' w='22125' x='22938' y='24444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='68667' id='7' is-fixed='true' name='revenue by markets' w='22500' x='125' y='24556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36222' id='10' is-fixed='true' name='top 5 customers' w='25188' x='45750' y='55444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36000' id='11' is-fixed='true' name='top 5 product' w='28875' x='71313' y='55556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5E672790-70A8-4778-A157-70B5ECA17915}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{518E324D-70A8-4E74-8239-93BD7BDD53E5}' />
    </window>
    <window class='worksheet' maximized='true' name='quantity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1C59D25D-9E4F-414A-A973-90BE181ECAEB}' />
    </window>
    <window class='worksheet' name='revenue by markets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5DF27B48-9B39-474C-AF2B-E722C71486A5}' />
    </window>
    <window class='worksheet' name='sales quantity by market'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B3AC160D-4B64-4B75-8344-068F76E8603E}' />
    </window>
    <window class='worksheet' name='top 5 customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[none:custmer_name:nk]</field>
            <field>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[none:customer_code (customers):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7FCD5F85-4ACC-47A4-A0F3-6D80B70F5F75}' />
    </window>
    <window class='worksheet' name='top 5 product'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[none:custmer_name:nk]</field>
            <field>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[none:product_code (products):nk]</field>
            <field>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[none:product_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{162008DE-390A-47FD-9CAF-1AD9A7A7EA37}' />
    </window>
    <window class='worksheet' name='year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[none:Calculation_82472208028213250:nk]</field>
            <field>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[none:year:qk]</field>
            <field>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1B664918-E06A-4D2E-93F5-B5DB31322343}' />
    </window>
    <window class='worksheet' name='month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[none:Calculation_82472208028213250:nk]</field>
            <field>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[none:year:qk]</field>
            <field>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8F1A9290-CCA2-482C-AEBE-6AEA14FFFECD}' />
    </window>
    <window class='worksheet' name='all year revenue by month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='274'>
            <card pane-specification-id='0' param='[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:Calculation_82472208005681152:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[none:year:qk]</field>
            <field>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[sum:Calculation_82472208005681152:qk]</field>
            <field>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{06B3070A-08F2-492F-BC1D-ABF4A4A48286}' />
    </window>
    <window class='dashboard' name='Dashboard'>
      <viewpoints>
        <viewpoint name='all year revenue by month'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='month'>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[mn:cy_date:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>5</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[mn:cy_date:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>4</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='quantity' />
        <viewpoint name='revenue' />
        <viewpoint name='revenue by markets' />
        <viewpoint name='sales quantity by market' />
        <viewpoint name='top 5 customers' />
        <viewpoint name='top 5 product' />
        <viewpoint name='year'>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.0xmvaxt0gufnkd17m1kxq1arg7vd].[yr:cy_date:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>2018</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{CE351E0E-2EC3-4257-81D7-449B0415D7FF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2deXBc13Wnv973Dd0AGvtOggS4QCJFrSYlWZZsyXYcO1GSylIT25lKZpJJ
      TWZSSWoy8dQkqZqq8aRSTqoyju2xnUzsGjtWbMcWtVCkKJGSuADEvu9LN3pv9L681/NHgyBp
      cSdANNj3q0JVo/u8+26/fr93t3PPURQKhQICQZmi3O4KCATbiRCAoKwRAhCUNUIAgrJGCEBQ
      1qi3uwKC8uPkjAdfIn1Xx768r2VT6yIEILjv+BJpJmcmmOm9SG3PU2R9k8RSKtp69rM6PYG7
      Yw9z751AYa2jqXvvltZFCECwLcgKNfWdLcxcOEMunqbCmmNlzkl4aY6qhmpWV8KwtEpj914U
      W1gPMQYQbAvZ8DLTQ4vse/Yol+9wQ0UNtgo7cjYNSiWFbA55i+shWgDBtiBJCjSKLCtTyzTt
      aSSWUqFJLhDx+NFYanBVWlFad6Pa4noohCuE4H7z3vwqwbscBL+wqw61evOe26IFENx3Wu1G
      6kza7a4GIFoAQZkjBsGCskYIQFDWCAEIyhohAEFZIwQgKGuEAARljVgHENwTZxd823Lexxur
      NqUcIYASZL7vfep6Hr3jH8czdh7v4jKu1gM0tBXdhqWYh7FxL12Hem55bEo20drZQv+J12h/
      8iVMhlvX4L1FHyAzceLHVB04ht1lu6M6r46cJy2baNrbwshrr9F87CWMt3HeogDyTPf10dZz
      +I7OWaR4rBBACbJw6X3srU1MffA+Cp2NereJxcUAOanAo8+/dMPjvGMXqD/6m1Q6dIye/iFr
      sRzdh3tYHD5HdGmEhz7xy+i11+/1escu4Ms4cJmzzAxdpLbnKBOnT5HJK9jT08lE/xD2xm46
      ujo/dGzGP0NoZZW41EdLq5WFiSUkWUlzZy2LozM49zxCfXvjdc/rGzlPMFOB05xlrv8i1YeP
      MXPyLTI5JfVtVciWVsLj5+h87lMoP+QWKjFz6QKKjJ+KrmPMvn8KmwViGSWoLRx44ombXOXi
      sWIMUKLksxnymQxLY/1k4iEqWnpIBRZvedz4u//K8tQA4xcHSAXnWJpfwVbbgbvSwOrKzbsr
      drOOifEF6lqbkLIZstk0oZkBYmsxknkdbXt3X/c4z/AljHVthKYGyMYjWJv3oVxbIhqOIOlc
      1LVd/+a/jNWsY3p0gZr2JuRMmmwmQ3hqAH1NC0sXTpJMyte5+a+QCHnI5SUiPg+JkIemQ08T
      mhu75bUCMQguOSbO/oS8qZJ8YIl0XolGq7mj43c/+RJ17XupqnVhrenA6bQRW51hbsaDs8p5
      02NrW1vxesIYNApy8TBr0Tg6gwGAitomlIrr34XeOQ9VDXWYdHliiRwrfe8Qy+kwaMBR38QN
      DtvA3dGKfyWEXls8byxSPK/aUgPRWaq6H/nwQdk1Lvzk+1S0dqE3W5k+d5Lc7fpOX3Ws8AUq
      IWKx2HZX4Y75yeTKNf8nVufIKe3YK+2bUr53+BKVew+i+hkRvdhRuynlCwGUEDtRADNrmW05
      b6tVtynlCAEIyhoxBhCUNUIAgrJGCEBQ1ggBCMoaIQBBWSMEIChrhAAEZc2WOMONTi5xaSGy
      8f+h7hY6qk3X2ETDUWbXZA42Oa5bxrdf6+fXnz+w/l+eV06MkQYq7Bae7mlEezPnEMGNkSXm
      /Emaqy3bWo255QButwv9Vke+ugVb0gK4Kqx0t9g5N+Kju6WKCpOGgiwxMe/HH8sABQZHF3mz
      b4HRpTAAvkCUoTk/6XzRoWN+NXpViXnOjvjobqkkHvDx7benAfAHo0x5ohQAjy9CKl9c05tb
      CSMDsXiSkfkgeblQ/OFXY/iDa8z6iiuuK6th0hLks1mWggkAEokUI3MBcvJOXB8s8P1Xz/HH
      Xz3BH/3dG5yfi3zYJJ/mH94av/0SZYmvff9d/vB/v8l//rsTDK3c/Wr1f//26Y3X8ytBMhJc
      7B3l1cHt2VMAoPrSl770pc0u1GTUUe3QcmbAxy99dA9GrZK/+ae3WY7lee3MCK7aSibGF5gN
      p9HrtLTZVPyfk5NEozF+fGGJY/vqON0/z9EDTesl5nlnwMcvPduJlEoyFZaw5OJ86+0ZPEte
      ZhIKpJCPmaSKFruSr/x4iAN1Rv7H93rJpJK8OeLniXYbf/z3p4lm8rz27jDtnc28+voH1LW1
      oIoF+c4FL3srNfzld8+TzWZ49ZKHj3Rtjr/J/SPHt16f4r/91jO88EgrlSYtwUCYr/zgPG/0
      LVBVVUGVUcHp0QBH99Xyfu8EX/1JP6Gckr31No6/PcA33xxhcS3Pweai49zgwBTzsok//sXD
      PN7h5G9+PMD+aj1vTYTZXWvlu6/1s6vdzdlzo3z91UEuzUc42OGmt2+CUyNefnBqmKxaz8rc
      Iq/1LXBx3EN1TRWL8z52NVr48j9fZHTWx2I0S2BpBbWtAodewTePD3Cgw72lgXHhfo0BUjGC
      Sitf/MQBfu/FLt4d8vCRAw3s6ajnM4+2IKvUOI1q1GotoWj8ukWsenz89v/8Ed+9FOTXj3XQ
      vxLH7bJQ4bTQP7rMoa4G+seWmZpeYc/uBgbGl7BYTWj1euYW/OSB2roqvvjiQR5rdxLPSB86
      x/DEMgaLCY1Wi2cpQHKLL8vmo+UTD1fzh39znL96pY+kVMBoNvJzR/fy/L5q/uXs9IZlai3C
      a6MR/vTfHGN1epaFWIY3ej185lg3z3S7N+zmvBF6OmoAMNts6OUs8XSalUgKgEVvsQVub67h
      5We70aWj9C6sEYrEsLqc/MmvHOZM7wJPHdnL7kYXf/HFZ+iuNbHsjSIZTPzG0XY+9exD/Pbz
      e9lda+ONvgUCnlUyGsOW3/xwvwSg0ZFeWyOWkRhfCOC0GVEoFKwlMshygf7hWew1bj5+uIkb
      7NeguqaKv/p3z6FKJwgmsugU0Nlex8vP7Offf3IfeqsddSrGu2M+Hu+qwWLUUVVVwcvPdPEn
      v3LkuoMdBZDJ5vEEi6KzGHU4nXZ+8Zku/ujXHsO4ZRdk6zj6aBd//XsvcKRWx/fOzvHBhXEG
      PXEsFj35XH7DLhlPEY4l+P6pERzVLtQFJb/7uR5GJ5f461cucfnx4LQZWA6sASDnsiRlJR92
      0Jb4p9cGSORkKqwGMuvnqXNZ0erV17G/Pq0dDXjnl3lnaJmjB5tufcAmsIUCUNJSs749Tq3j
      N55u43/939MMhOFTD9dTU1+NZi3Il3/Yz56Oeob6x/jumTna6yoAaKq2fagsvdHIH3zuED85
      PcKxh5sZ6hvlz755mqGl4g/05N5qYmoTdSYVPfvbMaYi/Nevn+SNQS8olTRVFQd+rgoLJo2S
      J3pa+fYP3qF3KU5dhZG9e1uoLMT5s6+f5Kd9y1t3abaKXJIvff1t/vHNId4a9tLZ4CCezrLk
      DXN2eIWr27yKKicmOUs6LxOOxClIWb53ehqlWo3mqrvikYPtXPhgiG8cH+DPv/k2xx7txGTU
      MTK+yDf+9SJTgRRQIBBJMD7rZWTxOuOOdcyFLF87PsB86Epg3Aqrkbc+GOV43yIoVDzeauX0
      Uo7drs3x9rwVwhv0ASOVTDOzuoarwkq1TU9BkhhfDNFQY8cfSdNcadyYBcrnckwshXE4LNTY
      DcTiSRb8cZpqnZh1V6ZnpHyeyaUQHo+fcys5/uDnD+JdDaHSGchlMtS77cRjCbyxHNVmDbJa
      i5xJozUasegUzHvjNLmt5DJZJlYiNNc5CYdiuN121MCSN4Sk0tLoMjE4OMloysDLRxruy/US
      AhCUDEMjsxwfDfE7n34Io3rrRwCFQkEIQFC+SJIkVoIF5c22h0W52apxKBjlxMASezrq6a6/
      elBcoHd4gSlfkid6WqizaekdWWTCG6PW7eSprho8Hj/joTxPdxWn8DKJBD+65OUXnmi7n19P
      UOJsewtQXDWuwm3RICnUVJjWJ83kPK+cneGTT3UyNTrDcvzKFJ5vNYTWZuPnn2jjjQ8mQZYw
      2Wz84jNdWHNrnJuP4fEEmFyKkF6PFHB+eJGV8PXXGMqZYCDMd04M8Y0fn+dL33qXM+NXVmWH
      R+f5xvF+vvqjC3jjuY33o+Eo//BaP995c5Cv/XSQXAGmZj3800/Pc3I8CEAmHOSV3uKG+RNn
      R5gL311KpK1m2wVwGYfVQDR+5SLFgiHqWuvQq1U8e7COwbnQxmdV1U666+3EEynMJgOoNLit
      GnrHlpmPFeh0F1uQR9ocnJ8JAwUCmQLVxm12PClhDEYDcj53zXsDy2v85gsH+M2P7eWdvvmN
      9/UmE7/6/AF++aP76HCoiGShxu3kpUNN/OyAcnxiHo2zimaH/j58iztn27tAi8s+zsxEcVr0
      /Mpz3TjWw+Ll8zJqZfG1WqUkL+WvOW54aoWZUIbPXNWlUSoUSPk80VTxh3TWVDHfO0nCWcBS
      4SS9un0+J6WKwainu6WKZCKJRm/gid2XY25KqFXr119vpJC/Ev1Bp1VDocB7l6bJmWxU6gC0
      rP2Mm9ClkXkWLHr+w6fvz6LW3bDtLUBPdwutDi3du+o3bn4Am8uOxxMAYHg2SFvtlTgziWgU
      X1Lmk4+0oFIoyGZymMxGHuqs44UDNfTNBNctldh1cGLUz5Hdlffza+0cZJmfnhlDY7Hx2WvG
      Ryq4nKVXzqFQXvWsLMj86NQQlXU1fHR/3Q2LPri3iafbbbw3HbqhzXaz7S2AQqnixaPdnLk4
      xYxBQ6ur6ICg1Oh5qNbAP74xiMNh5cVKPeMT8yT1DszZKLMrUbz+CGq9gRf3V/PDd9ZD4alU
      fPKJTpbncuiU8MhuN68MBDCrFVTZTTepSXliNJv4jy8f4XsnR3HZDDRe1VVx6RWcGFgi6vPT
      1b2LfCrJxaUElSRI6y2k4gkG4wnaGirxrgbw+8IsxVRM2zTUry/k7u9q5V9PDrBSaabWWhqZ
      Ia9GrAMIgKLb84I/QVO19ep3mV8JoTeZqLbpkXM5Vtay2LQw509sWF0WQCJbvJWMRj0tTgPB
      tEylRUdByuNdy1LjKC3vKkmShAAEDxoF1tZiWM0GJidncLrrKGRiaC1ONAoZpSyh0BvRKBVi
      IUzw4BGLhJiamycVWMSXBLNRgT+SZXl+ltVVD5Oz86iv2k0oBCB4oLDYnVgMWvSVLTy2v4WJ
      sRE0WiMajZpYJICs0EChgCRJyLK8/YNggWAziQRWSSRS+H0+QqEQNY17iQWW0VmcOJ1OlHKO
      dL6AQVNcExJjAEHZIsYAgrJHCKDMuJMG/0G2vcy2CkCSrmzSy+fzN7G8N3Zq2VuBLN9uHqFr
      f58HzfYyJTMIzvX1Im1RhhRZlpGUW6P1m5WtamlB3dK6Jee9F9b+y59sdxU2FePnv3DX17lk
      BCAP9JObnd3uamwqumeeLUkBCK4gxgAlzEjfBRK5Aqte7y1tvd7VjdfXtU8F8a7lPvz+PTIb
      9POP/QN4kmlWoyHemp5mNZ0HZE6NjhDIy5yamqbPF2A2FGLI6yVXQvOOt90CDAwMsH//fgIB
      Py7XTTwr83H8MTWVDj2QJ+CP4aq8Nv6nPxCg0uW62zrfEimf5cziIhmFnuea6xjxLoPGyF6n
      g1Q6yXJaxqLIMR6O0uWqwJtTsNuopC+S4XB1xZbV644o5NCarXgWl0iv+Zhf9uIwavAFQjis
      WiSdk7mJYVpa2sgrVGg0WpZnx0gorTi0EvPLXhpcRt7pneKxnt0koj709Q9vejXngn4mI2s8
      C6wk0jzT1kzfSoDq2mo6HFYyqQgmZx35VJjpSBCtoRJNCYV1vS0BZCJLeDwhmjsL9J47Q1Xj
      buREiHA8g0pvZFdDFfOLXmrra/CvTKF37WN+egmX28V43yju1jYs6hyRrBKTIsPYoo9Pf/xj
      W/zVFMxGIoCblKQCKQU4kJVqwrEQLXVVxJJx5iNrrMgq5BRkpdsfIG41vsV5kvkCuUQEl8OJ
      BaCgoK5aS22tmYHZOM3tu6m06FlZS6NUSORlNXqdAlCgVKkIRePUVNjISBJKxdY09nurazCY
      nbiNehJxBW9Nz9DorCGYTNLr8VJV34QvsIDNbMZtcxFLJYsR63427+k2cVsCGB2fx2HXMDY2
      SWPrLqAAFicKbRqdQc/oyAgGi42V1Sj7d7fTP7JEQkoQnk3S2LqLWCpCOOrHE8rQ2dZEQ81W
      ++bLXPT4+a0jjwAFMlIO1qfITNqiS+5MwIfe4qQ5s0YiXSBcUFBKzrpVje1U3eTzQ/uuvK6+
      /GLXrluWezczJTej2ubgcgyz9qoa2q+q9Cd7DhVfVJbuXozbEkDb3v1YLBbisTjKy8otKJBk
      GaVKSUdzPWMzy+xpb2BqdpEDD3WxML9IXX01K/PzdO7dR2R1nl37nBiVWXyxze+LXo1Kref3
      H32IYCaHyaCl1WYGjZFgMkk6kyIt51Gp9cwF/eyprOIRu4ZYRrphWEbBg8u2ukJIkoRKVfTJ
      SHz975EewFkg3TPPbnc1rkGSJAoL87c2BGSp+IArdVuVuwaFwUA+n0etvv2JTUmSSmcaVHD/
      uN2p2Tu5oUrB9m4oGQFonn8BXW5rukZ38sTZzLKV9utnv9lusr0X0T60+TNCO5GSEYDSXbNl
      St/Kp8hWP6G2glxfrxDAOmLYtwNIxiJMTEySyd16BieXTpK7xWzupelJTp06RTIHyWiAsamF
      9U9kBvr6yMswOzFMJJEhHo8Ri4RvWWapEIsEOHexj3jAw6XBIWYWFuk9f4GhsUnm5+eYGB2+
      Jv1V6Ty6FhdAuA1cF18oSltzLaPTM5g1BQy2KmKhFVQGOya1jC+SpLnWxeJKAKcBskYnFU4n
      qcgqkUAErdVBg9NAIKPDYVQBBXr7+3nkiWNc7B/GolQQbW7EM3SBirpm3nv3dSR9I9LKOVx2
      M8FggmeePbbdl+G2sNhdOKxBgtEU3fu6mR+7iK26DXJhYhE/aB2oFWzsCBMtwA5AzqWZmlvB
      pEoy54mRSMRR60wo5BzxZBatGhLxOJnIEoEEpCJBUhKEQj7yBS2peASycYLxLACTHj/Pv/gZ
      jBrQ6fTYjToyMiRzCipdLjT5NfTmCvQ6PZ6FSSTNzgknEwmsEggEMVuMjAwOYXS1kl1bBLUW
      l7uBCrOadL6ASqVCqVSWUAsguCF2mw1/KILZ1Uy9vIzRaES/nsYlGvIzt+LDuacNvdVFRaUT
      g1HD4sw4jooqDFojykKa8cVVnPXFxHc/f/ggK+tl11TamPclORAL0Nm9m3dPnGD/kU8yN/Q+
      NncLbS3NkE2RzMkYNaX/vLS7qnnMVVwadFYVc53VuG48GXHH6wDvnTmFMpfG1fUUOf887R0t
      zM0v4XI3kI54SCuMmFU54nkNEf8K7e3t6NWQzKqIpWNYTUZAgcVsJhNe4i++/BXCBQd/9YVf
      4I3BPjBU8fHnPkLvB2dY9Xqobt7N6qqH6oY2zp06zr/9wq/x5b/9f/yn3//Cbdf5QR4EhwOr
      ZAoa3JW358MkSRLpb34D0+e/eEvbUpja3Mop07teB8hIClbGLyHLeXLxACnHHpJzg+QzFgqK
      ECmNgpGZFdoa65iamqLZLjPm1WJtcuObmkJGwcMHD6LUGdl38AjdPYeBGJXuXUAxQG5WpeOF
      oz185dUZfveXP8YHFy7QUmnmrfeG2dfTfTfVfiBxuKpvbfQzqNw1W1CTnckdt2lGoxG9yUi1
      qwq1zkhdfR3VThs2q4tsyk8gmiCbyWGzWzGbzViNGkZmvVitNhprK9EoJLz+YnJspc7G/s5m
      7HY7oCeT8JJBQ8AfoNKo5fjZCV4+tofjr79OpbuJ9oNHkJIJ6pzWm1dScFP0L7603VUoGTbV
      FWK4/wJ6ey1tTbeXYPpqV4j87MyWbR55kLtAd8rV1/xWlEJXpSS7QDei68ChzSxOsEXs1C2R
      qpaW2xq73AklM6xX6EszgYLgwaZk2u58hRORv+XOWJqbJpHJYnE4Uckqqt3OG9queRfB2YBp
      Ex55ofga7y0sUOGs44jTwJtzKzQ4nOxx2uhbWiAqq3DrlCysJah1VFClKZDXWKg1ltKOiyIl
      I4Db7ZcKriApVDTXVTHnixLx+AhEQkipCJLaiE6RJ53KYaswc6l3gIMHDmLfpN2eqxE/vcE1
      XnDV4QsG6WpqZdW3AtjIKtUYlKBRKalQ5zkXiNGmK3C05cbi3E5KRgClHhalFEOcqAoSc0s+
      zI4K7G0dQI5oIYOk0lPIxNAYTOg0OjrbG1FqDJu2F3dPXSsvFLTsd9nRyAbenJuhweEkmEyi
      lfNEZRUmk5b5gp7HKy24NAoW4ikazYbNqcAmUjICKPWwKKUY4qS++cMpX6vdxdXPSCSyPr0M
      9Y0tG59vyo5IhYLDDQ3F10o9H2u/cl2cxsaN125babqDX03JDIIFm8vlm19wczatBRgb6iOa
      lOloasJY7eJmczpejwd3zb2vRs4G/Qz5QxxqbMKuzPO+J8ijjY0YVAp6lxawWRzk0nESaHCp
      chgs1eSTASodVWju+ew7F+uf/+Vt2ZXCfP3O2RGm1mFTBFhZ9hBensNtseIPhKmochPxzqI2
      udDlQvTPr9HdVrcpApgL+unzRznU2MRwMMqxJjcXvUEOuTTkdBUE4lFS6QSLaYkel41g0Af5
      NRxlLgDBFTZNAEHvEgpJQmeqYN+jh1g8d4JExoA2FiMej6NXWUgmUlgMm9frujYmjZKTswvF
      mDQ58AVWsJnN1JgtZBRZQIkin0Snt2za+Xcqia///W3ZFSqrMH/q01tcm+1l0wTwxLFrA13Z
      H3mWy6Fr5hesNDU2fvige+SmMWn2XImRs3vTz7yzue3oG/nNjSF0P8lFljg/s0ZnWy1zE1No
      LTYsBg2ZZIKW3XvRrOcJuy+D4K24+csNz+Ico6NjZKQrrlvBYJBIJAJAIl5MWzo/O4NUKH62
      urLA9NwSi3PTjI5OkF8/9NLyIj8enyApwXI4yHvLxViiUj7DqZlZApkc5xcWGA6G8Xo9LM7O
      7JgtkRvoHTiNCvyeOWzVbRg0KmIRP1l01+wIK5lpUMHNiSdzdHa2Mzk1RSGXR2+1k0nGScbC
      aEwObCYDJrMJWU4zN7+MlIshS0o6O3cxPjlJrV1FIJ6n0lh88s2uC8ebzFCrgoAEy74gj7c0
      0+9ZYb+7mveTKaLn3kbn7KCh5SaVK0Hy+RyFApjsdcSDi2gtFbjcDcjZ9DU5wkpGAOpf/XVM
      Ot2WlL3TPDZvRDoRQ0WWqZUQu8xFl3CHs7gfIJVMAaBQm1Dlk2QKSqRchmw2SyoWYcCb5dEn
      WqEgM+7z8nxnN0YVZKU8azI4FGBUQiCZJF+A95ZXOfqRJ5lraGU1EKUAlEY0z9vDYLbTuWd9
      KvgmoThL5q4QrhA3p9JpxRdJ09bRhcW8iMbkQKd2oFxf4b6c+cVdXY1OoyQSz6JX5lkNhNnV
      2YVBryWeSmPUa3m55zD+RLHLdLDaxWIyhzKTpLGqhkmfj8PuKt5fWmEoEOJAxx52t+dJ7ZAt
      kXdKyQhA9nrI3yIwlkKvR1Vze3sNHjTsrmouL21V1TTc0E6/7lXrsBUdzxqumvSymNQbwXEr
      TcWN7gadkV1XNbzd7mKL8mRTE7gqMJsf7FmzkhFA7rXjt5yd2Ap/8HLkduOVypYH++aHEhKA
      4P5xuwLYaQkA74a76tTNjA+z6PFfeUPOEkskSSaKcWfWolEAVn0+5GyCRFbGuzTHij/M+HA/
      i55A8bBMnFOnTnH2/CUAvNEw3mQGgHw+y5A/BIUC/SvLJPIyS+vlzs7O3dWXFRTJz85s/JU7
      dyWAtXgOKTjH/GqIixfOEw57mZpf4NQb7zCz4CGZKM5IXDz7Nn7PLJMz0yxGlVRYDMRzBbzL
      V7o6cj5F//A4UGAmGmfGX8x1dX5llQpFmkuhGC1OJxc9Xk6MTpFbW+bVkxfv/ZuXMcmvf23j
      r9y562F9pdNGX98geRREwyEAWnd1kY1H8XqKCyvNnXuYHR0hm4hhcTjR6/Usz44SXLvctEqM
      Ty3wcy99HCigU2nQrU9XqtUqXAYtebmY7eXx+hr2GDL84OQ4Xbvr7ulLCwSXuasxgJIMUyED
      L37kAL2Dk1gratFJSjToATX5XPEGr3S5sWsVaKp2sTrVz6xUx6HHnoZsmkxeRq2z8fLPfYKM
      QgEoMaikjUwuLRYTZwMx2q0GEgqZ5XiK5rb9OFtc2Ddra9MOZWLgHAZ3J5nlfvLOPTTXVCDn
      0sSjIWSlhoJCTTyyisHiospuZNkfpdqqpWCqRK+Eb50/y3veEH/xwksMn34Dry/Fxz/7KcIz
      o1yaXqS6oQXPB2/R9dnPE53uJRqK8NixZ3gAZ0HvTgD7Hz6y8frIkcM/86l541WlywXr2SAr
      D344YoQkSVS4i1N6CWCv+9on+zFL0dGn3lHcTqcym2nZv/9uqvxAobNWk4v7UanVpGJevCYr
      mdAyFGQyqTRmixWUWuRYCE8hQ2BugmxVA67WSvRAvd3J5+vbcWogqLfx6C4bwQwshRO88LFi
      ELID+7vJA56FYbQV+x7Imx/EhpgdiV6vQ1vIYq1pxWqvILQ0hUKlxWazUVFRgdFoRK2QiGRk
      VPk8RosJre7KlsgD7mos66vueg30eROYEwHa693FIGRVbvrHZ5gYHqVj7xGqzXmSO84Z6PYo
      mRxh2d6LFNb9U26Ewm6/q8QOIjDWFSRJIvFnf7rx/802x5TCJpcdFRjrXih0daPbIl8gQXkz
      Nz2BzuLEoFVRyGcxV1RuuEOXjACEL9D943a3RD4Q5NeQVA6SsQjBeBiFzk6X68rGkZIRgMLv
      gzL187nf3G6y7EKhsONsP4RSTS4bBjmPxe4ktpa4xrO1ZARQSKe3uwplgUKh2PAgfRBtP4TS
      SKVdi9ZSg0YhU+eWyeTkjQQjJSMAwf3hdm+mB8nWWXVtAAbVequyKTnCTr55Ahn4yauv3tBm
      fmHhmv8v+wrJmThvvfkq33nlOABnTr7OmXN9AEyPDPDqT19l1bPEq6+/zvSSn+H7PLsAAAcV
      SURBVH955QdQyPHd7/7zvVa7rElEAgwODRKIJK77eT6dYGxsjLlFD+PDA0zNLlzX7jLLs8Ms
      eNduabsW8jM2Nk4iFmFgYIjl1dANbVeXFxgZHsDn9/+MrcSls+dIAdMTo4xOTONZmmdgYOi2
      t20qFIrNyxHmMiuYmJomlJDpu9RHT7OdM2NeolnIR9aoqa9jLbjA7PwKTn2W90a9PLKvg4M9
      PciZGKff/YDGPQ8DaXQmN5czxPiTWV54fBdfeXV0I0OMFAsyMjyMynHnWVEEV/CGouzr3sf0
      zDQu+4ejy6n1JuxmA5Imi6yvBvn6QgHIxCNIChXpdATNLWwXl5ZRazVMjy/Q9vB+VmdmoPr6
      q/rZTJpcJoVnMUB7T/dVtiqqnQ4kALUWLZDM5tnbYGU5kqOp4vYD3qhUqntvATTWWqaHBmlv
      q0OrlLk4MArAnv09NDY0YNGrUQAqtZrwWopq55WVYrW1iueOPcXHP3oM0OH3TuCPpgn4A2il
      DMff7uPJvcXFGa3JQXvXHs73TlJrFj23e8Fm0DI4NIjWYLvu5wn/ImMLPtQqC2vhBRKZG7tF
      52WZVCJOMJy6pa3dZkaSwWjWMD44REF142nvbE5CZzCi13GtrZRhbmmRpWUvqViUaCyFQsox
      NL2K03Ln90XJLISJDDGC7UC4QgjKGiEAQVlTOgJoEMGzBPefbe28KhSKjVU+SZKuv5CxCdzJ
      auJWlX0nCzo7mfffe59HH3v0pjYLE5NU7eq4aQTx+8W2DoKvRpblLbtBdmrZO4FvfvVveeqF
      zzL6wetElU4celjzL7Cc1NFRqWH3w0+xu7UZgJ/+8J/xRjNUKbPUPvYkK+OzaNXwsY89t231
      L5lfbitvop1a9k6ga08HvRfPEEpqMWuLLbjB7OCZjzzOnr1dBDxzG7b5fJ6CLNPU3Igka7Co
      otjd7dtT8XW2vQVYmZ/GF8tT53ZSYdWxGpGorbr37CajA73IOjuVFhULvhhtdW7MFVZWVyPU
      11bduoDrUZA5f7GPw4ceZnzoEmpLFQZSW1L/B4VsIsrg2BQotfT07OPcVV2k906/zcNPHkW7
      jc+QbRfAYP8ARhQEyBIPxjn69FHUmzAUeOfkmzhqWpBzceqMMBaAtXiQY0efxnCXJ5CzKd7v
      H+bxw3sY7PdSIImCwpbUX3B/2Pb2O5vNkshm0OlM1DmNROLZTSm360APsbCXbDZLNJFFr9PR
      VOckEonfdZlKrWE9qrCaTDZBNpvdsvoL7g/bvoS5Z3cL/lgel8OCyWggGl0D7j2hcjoWobl9
      L06TikV/jL0uBzqTkdi6I97dkE1EkSWZmYUgDbU21JZKDKS2pP6C+8O2d4EEgu1k27tAAsF2
      IgQgKGt2lgDycU6f7WVhYpLb2kCZDjOxsMjIyPWCwKaZnLj5Ro/r1yFFMHpjn3fBzmLbB8F3
      RD7OpXO9xBvd1JEhurKKxWRgYiWO3axGSiWxGJQ0dh3GMzmA3WZnOqaiQpXl/TeGKVQ0klqL
      Ul3twhNYIRUz0Fxvo/dSH2aTjbHFIEZ1HoPZjlZOkkaPUaPEBIQLOTRSCo1Wz/sTa/zOr720
      w54eguux437D7oceYvBiL9OzC3R11DEyNEZL9yHy6TQ2k4mGGhuDfYOsRiMsLK4CBUKhKP4k
      7HbKjC8G8UwM07S7EwDf3DjLoSjz09PoHbVodToKuQShtSSJtSCBYBC/x0MgskZLvZMMepoa
      GnZUvqxyZXy4nzePH+eDixdZ8Yeva7OzZoHkLOFYjmQkSFVdNePjs7Q315BTmsgmo6iVSnRa
      JVlZiXfVS6WjAlmthXScuaUVquuayUS81LZ2MD8zTWVlLQ6rlsn5JapsdmStEaWcXT9VklRB
      j1GZxh/OUOGyYTNqSclafEvztO3etfOeHmXIie9/n4c/9znsQCa5xujkPHu7uiATIxBN7DAB
      CAR3yIYACjle+cFPefGl53j1jdMcabVwMeoUDzFBmZANo7PWotUZ0SiK7utut1sIQFAm6CrR
      5DycP/8BemsxZP/k6KDoAgnKE+/IGZYNXUIAgvIkm4iSUZqEAATljRgDCMoaIQBBWSMEIChr
      hAAEZY0QgKCsEQIQlDVCAIKyRghAUNYIAQjKGiEAQVkjBCAoa4QABGWNEICgrBECEJQ1QgCC
      skYIQFDWCAEIyhohAEFZIwQgKGuEAARljRCAoKwRAhCUNUIAgrJGCEBQ1ggBCMoaIQBBWSME
      IChrhAAEZY0QgKCsEQIQlDVCAIKyRghAUNYIAQjKGiEAQVkjBCAoa4QABGWNEICgrBECEJQ1
      QgCCskYIQFDWCAEIyhohAEFZIwQgKGuEAARljRCAoKwRAhCUNUIAgrJGCEBQ1ggBCMoaIQBB
      WSMEIChrhAAEZY0QgKCsEQIQlDVCAIKyRghAUNb8f8oVO45amSGgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='all year revenue by month' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='29' name='month' width='192'>
      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
      61sOMgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='87' name='quantity' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='87' name='revenue' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='revenue by markets' width='192'>
      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
      ykVEklV6ZHwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='sales quantity by market' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='top 5 customers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='top 5 product' width='192'>
      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
      j1IAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='29' name='year' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
